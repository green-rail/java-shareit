CREATE TABLE IF NOT EXISTS users (
  user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
  item_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  sharer_id BIGINT NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(1024) NOT NULL,
  available BOOLEAN NOT NULL,
  request_id BIGINT,
  CONSTRAINT pk_item PRIMARY KEY (item_id),
  CONSTRAINT fk_item FOREIGN KEY (sharer_id) REFERENCES PUBLIC.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
  CONSTRAINT fk_item_1 FOREIGN KEY (request_id) REFERENCES PUBLIC.requests(request_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS bookings (
  booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_date timestamp NOT NULL,
  end_date timestamp NOT NULL,
  item_id BIGINT NOT NULL,
  booker_id BIGINT NOT NULL,
  status VARCHAR(50) NOT NULL,
  CONSTRAINT pk_booking PRIMARY KEY (booking_id),
  CONSTRAINT fk_booking FOREIGN KEY (item_id) REFERENCES PUBLIC.items(item_id) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT fk_booking_1 FOREIGN KEY (booker_id) REFERENCES PUBLIC.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS comments (
  comment_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  comment_text VARCHAR(1024) NOT NULL,
  item_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  created timestamp NOT NULL,
  CONSTRAINT pk_comments PRIMARY KEY (comment_id),
  CONSTRAINT fk_comments FOREIGN KEY (item_id) REFERENCES PUBLIC.items(item_id) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT fk_comments_1 FOREIGN KEY (author_id) REFERENCES PUBLIC.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS requests (
  request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  description VARCHAR(1024) NOT NULL,
  requester_id BIGINT NOT NULL,
  created timestamp NOT NULL,
  CONSTRAINT pk_comments PRIMARY KEY (comment_id),
  CONSTRAINT fk_requests FOREIGN KEY (requester_id) REFERENCES PUBLIC.users(user_id) ON DELETE CASCADE ON UPDATE RESTRICT,
);
